{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "arr",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "f",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_arr",
						"type": "uint256[]"
					}
				],
				"name": "g",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_arr",
						"type": "uint256[]"
					}
				],
				"name": "h",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Data Locations Data Locations - Storage, Memory and Calldata Variables are declared as either storage, memory or calldata to explicitly specify the location of the data. storage variable is a state variable (store on blockchain) memory variable is in memory and it exists while a function is being called calldata special data location that contains function arguments",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"level0/solidity_basic/DataLocations.sol": "DataLocations"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"level0/solidity_basic/DataLocations.sol": {
			"keccak256": "0x0dbce8e89e44391f379e0504ffdf3c873866df9b4b0ed60179ed746872bed30a",
			"license": "MIT",
			"urls": [
				"bzz-raw://83120a313cfca6a9a8e75ce36e30a22b530ac47278b73a12c433258c3d4a4971",
				"dweb:/ipfs/QmWN2DVPKkiq4PRe7pgjo8fE1EU15oLqTtWuYAVRsBKTQQ"
			]
		}
	},
	"version": 1
}