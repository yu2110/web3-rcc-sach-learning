{
	"id": "3237c78860d830331044c1e5000de887",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"level0/solidity/TyperConvert.sol": {
				"content": "pragma solidity ^0.8.20;\n\ncontract TyperConvert{\n\n\n    int8 y = -3; \n    // uint x = uint(y); \n    //如果转换成更小的类型，变量的值会丢失高位。 \n    uint32 a = 0x12345678; \n    uint16 b = uint16(a); // b = 0x5678 \n    //转换成更大的类型，将向左侧添加填充位 \n    uint16 c = 0x1234;\n    uint32 d = uint32(c); // b = 0x00001234 \n    //转换到更小的字节类型，会丢失后面数据。 \n    bytes2 e = 0x1234; \n    bytes1 f = bytes1(e); // b = 0x12 \n    //转换为更大的字节类型时，向右添加填充位。 \n    bytes2 g = 0x1234; \n    bytes4 h = bytes4(g); // b = 0x12340000 \n    //把整数赋值给整型时，不能超出范围，发生截断，否则会报错。 \n    uint8 i = 12; // 正确 \n    uint32 l = 1234; // 正确 \n    // uint16 m= 0x123456; // 错误,\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"level0/solidity/TyperConvert.sol": {
				"TyperConvert": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"level0/solidity/TyperConvert.sol\":26:822  contract TyperConvert{... */\n  mstore(0x40, 0x80)\n    /* \"level0/solidity/TyperConvert.sol\":64:66  -3 */\n  0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd\n    /* \"level0/solidity/TyperConvert.sol\":55:66  int8 y = -3 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x00\n  signextend\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":181:191  0x12345678 */\n  0x12345678\n    /* \"level0/solidity/TyperConvert.sol\":170:191  uint32 a = 0x12345678 */\n  0x00\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":216:217  a */\n  0x00\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffff\n  and\n    /* \"level0/solidity/TyperConvert.sol\":198:218  uint16 b = uint16(a) */\n  0x00\n  exp(0x0100, 0x05)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":312:318  0x1234 */\n  0x1234\n    /* \"level0/solidity/TyperConvert.sol\":301:318  uint16 c = 0x1234 */\n  0x00\n  exp(0x0100, 0x07)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":342:343  c */\n  0x00\n  0x07\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffff\n  and\n    /* \"level0/solidity/TyperConvert.sol\":335:344  uint32(c) */\n  0xffff\n  and\n    /* \"level0/solidity/TyperConvert.sol\":324:344  uint32 d = uint32(c) */\n  0x00\n  exp(0x0100, 0x09)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":445:451  0x1234 */\n  0x1234\n    /* \"level0/solidity/TyperConvert.sol\":434:451  bytes2 e = 0x1234 */\n  0xf0\n  shl\n  0x00\n  exp(0x0100, 0x0d)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":476:477  e */\n  0x00\n  0x0d\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xf0\n  shl\n    /* \"level0/solidity/TyperConvert.sol\":458:478  bytes1 f = bytes1(e) */\n  0x00\n  exp(0x0100, 0x0f)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf8\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":576:582  0x1234 */\n  0x1234\n    /* \"level0/solidity/TyperConvert.sol\":565:582  bytes2 g = 0x1234 */\n  0xf0\n  shl\n  0x00\n  exp(0x0100, 0x10)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":607:608  g */\n  0x00\n  0x10\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xf0\n  shl\n    /* \"level0/solidity/TyperConvert.sol\":600:609  bytes4(g) */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"level0/solidity/TyperConvert.sol\":589:609  bytes4 h = bytes4(g) */\n  0x00\n  exp(0x0100, 0x12)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xe0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":736:738  12 */\n  0x0c\n    /* \"level0/solidity/TyperConvert.sol\":726:738  uint8 i = 12 */\n  0x00\n  exp(0x0100, 0x16)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":766:770  1234 */\n  0x04d2\n    /* \"level0/solidity/TyperConvert.sol\":755:770  uint32 l = 1234 */\n  0x00\n  exp(0x0100, 0x17)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"level0/solidity/TyperConvert.sol\":26:822  contract TyperConvert{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"level0/solidity/TyperConvert.sol\":26:822  contract TyperConvert{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a2a86d67ddf124333612b28e66c91e6f1324cca3870c408641b6e6b8038068ff64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5f806101000a81548160ff02191690835f0b60ff16021790555063123456785f60016101000a81548163ffffffff021916908363ffffffff1602179055505f60019054906101000a900463ffffffff165f60056101000a81548161ffff021916908361ffff1602179055506112345f60076101000a81548161ffff021916908361ffff1602179055505f60079054906101000a900461ffff1661ffff165f60096101000a81548163ffffffff021916908363ffffffff16021790555061123460f01b5f600d6101000a81548161ffff021916908360f01c02179055505f600d9054906101000a900460f01b5f600f6101000a81548160ff021916908360f81c021790555061123460f01b5f60106101000a81548161ffff021916908360f01c02179055505f60109054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19165f60126101000a81548163ffffffff021916908360e01c0217905550600c5f60166101000a81548160ff021916908360ff1602179055506104d25f60176101000a81548163ffffffff021916908363ffffffff1602179055503480156101dd575f80fd5b50603e806101ea5f395ff3fe60806040525f80fdfea2646970667358221220a2a86d67ddf124333612b28e66c91e6f1324cca3870c408641b6e6b8038068ff64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x12345678 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH0 PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1234 PUSH0 PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH0 PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1234 PUSH1 0xF0 SHL PUSH0 PUSH1 0xD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF0 SHR MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL PUSH0 PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF8 SHR MUL OR SWAP1 SSTORE POP PUSH2 0x1234 PUSH1 0xF0 SHL PUSH0 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF0 SHR MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH0 PUSH1 0x12 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH0 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4D2 PUSH0 PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH2 0x1EA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xA8 PUSH14 0x67DDF124333612B28E66C91E6F13 0x24 0xCC LOG3 DUP8 0xC BLOCKHASH DUP7 COINBASE 0xB6 0xE6 0xB8 SUB DUP1 PUSH9 0xFF64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "26:796:0:-:0;;;64:2;55:11;;;;;;;;;;;;;;;;;;;;;;181:10;170:21;;;;;;;;;;;;;;;;;;;;216:1;;;;;;;;;;;198:20;;;;;;;;;;;;;;;;;;;;312:6;301:17;;;;;;;;;;;;;;;;;;;;342:1;;;;;;;;;;;335:9;;324:20;;;;;;;;;;;;;;;;;;;;445:6;434:17;;;;;;;;;;;;;;;;;;;;;;476:1;;;;;;;;;;;458:20;;;;;;;;;;;;;;;;;;;;576:6;565:17;;;;;;;;;;;;;;;;;;;;;;607:1;;;;;;;;;;;600:9;;;589:20;;;;;;;;;;;;;;;;;;;;736:2;726:12;;;;;;;;;;;;;;;;;;;;766:4;755:15;;;;;;;;;;;;;;;;;;;;26:796;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220a2a86d67ddf124333612b28e66c91e6f1324cca3870c408641b6e6b8038068ff64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xA8 PUSH14 0x67DDF124333612B28E66C91E6F13 0x24 0xCC LOG3 DUP8 0xC BLOCKHASH DUP7 COINBASE 0xB6 0xE6 0xB8 SUB DUP1 PUSH9 0xFF64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "26:796:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "276264",
								"totalCost": "288664"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 55,
									"end": 66,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55,
									"end": 66,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "12345678"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 170,
									"end": 191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 216,
									"end": 217,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 216,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 216,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 198,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 198,
									"end": 218,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 198,
									"end": 218,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 198,
									"end": 218,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 198,
									"end": 218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 312,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "1234"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 301,
									"end": 318,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 318,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 335,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 335,
									"end": 344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 324,
									"end": 344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 445,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "1234"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 434,
									"end": 451,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 476,
									"end": 477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 476,
									"end": 477,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 476,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 476,
									"end": 477,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 458,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 458,
									"end": 478,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 458,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 458,
									"end": 478,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 458,
									"end": 478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "1234"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 565,
									"end": 582,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 600,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 600,
									"end": 609,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 600,
									"end": 609,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 589,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 589,
									"end": 609,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 589,
									"end": 609,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 589,
									"end": 609,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 609,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 736,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 766,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "4D2"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 755,
									"end": 770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 822,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2a86d67ddf124333612b28e66c91e6f1324cca3870c408641b6e6b8038068ff64736f6c63430008140033",
									".code": [
										{
											"begin": 26,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 822,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"level0/solidity/TyperConvert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"level0/solidity/TyperConvert.sol\":\"TyperConvert\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"level0/solidity/TyperConvert.sol\":{\"keccak256\":\"0xf696672fc44f1fe130dd69750229739e1996a85d25334c211c9212d751855a73\",\"urls\":[\"bzz-raw://3b6cfb6113f46afd25b1d6d9aa07053439d3fce4571b5b746fd57d586cec3bc3\",\"dweb:/ipfs/QmYAqdnrKtrdyGbkjZCqf698k929v4kXqBNuTmrVFMnyPq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "y",
								"offset": 0,
								"slot": "0",
								"type": "t_int8"
							},
							{
								"astId": 8,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "a",
								"offset": 1,
								"slot": "0",
								"type": "t_uint32"
							},
							{
								"astId": 14,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "b",
								"offset": 5,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 17,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "c",
								"offset": 7,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 23,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "d",
								"offset": 9,
								"slot": "0",
								"type": "t_uint32"
							},
							{
								"astId": 26,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "e",
								"offset": 13,
								"slot": "0",
								"type": "t_bytes2"
							},
							{
								"astId": 32,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "f",
								"offset": 15,
								"slot": "0",
								"type": "t_bytes1"
							},
							{
								"astId": 35,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "g",
								"offset": 16,
								"slot": "0",
								"type": "t_bytes2"
							},
							{
								"astId": 41,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "h",
								"offset": 18,
								"slot": "0",
								"type": "t_bytes4"
							},
							{
								"astId": 44,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "i",
								"offset": 22,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 47,
								"contract": "level0/solidity/TyperConvert.sol:TyperConvert",
								"label": "l",
								"offset": 23,
								"slot": "0",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_bytes1": {
								"encoding": "inplace",
								"label": "bytes1",
								"numberOfBytes": "1"
							},
							"t_bytes2": {
								"encoding": "inplace",
								"label": "bytes2",
								"numberOfBytes": "2"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_int8": {
								"encoding": "inplace",
								"label": "int8",
								"numberOfBytes": "1"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> level0/solidity/TyperConvert.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "level0/solidity/TyperConvert.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"level0/solidity/TyperConvert.sol": {
				"ast": {
					"absolutePath": "level0/solidity/TyperConvert.sol",
					"exportedSymbols": {
						"TyperConvert": [
							48
						]
					},
					"id": 49,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TyperConvert",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "TyperConvert",
							"nameLocation": "35:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "y",
									"nameLocation": "60:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "55:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int8",
										"typeString": "int8"
									},
									"typeName": {
										"id": 2,
										"name": "int8",
										"nodeType": "ElementaryTypeName",
										"src": "55:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int8",
											"typeString": "int8"
										}
									},
									"value": {
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "64:2:0",
										"subExpression": {
											"hexValue": "33",
											"id": 3,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "65:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_3_by_1",
											"typeString": "int_const -3"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "177:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "170:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 6,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "170:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783132333435363738",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "181:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_305419896_by_1",
											"typeString": "int_const 305419896"
										},
										"value": "0x12345678"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "205:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "198:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 9,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "198:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 12,
												"name": "a",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 8,
												"src": "216:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											],
											"id": 11,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "209:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint16_$",
												"typeString": "type(uint16)"
											},
											"typeName": {
												"id": 10,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "209:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "209:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "308:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "301:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 15,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "307831323334",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "312:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4660_by_1",
											"typeString": "int_const 4660"
										},
										"value": "0x1234"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "d",
									"nameLocation": "331:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "324:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 18,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "324:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 21,
												"name": "c",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "342:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											],
											"id": 20,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "335:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint32_$",
												"typeString": "type(uint32)"
											},
											"typeName": {
												"id": 19,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "335:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "335:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "e",
									"nameLocation": "441:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "434:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes2",
										"typeString": "bytes2"
									},
									"typeName": {
										"id": 24,
										"name": "bytes2",
										"nodeType": "ElementaryTypeName",
										"src": "434:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"value": {
										"hexValue": "307831323334",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "445:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4660_by_1",
											"typeString": "int_const 4660"
										},
										"value": "0x1234"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "f",
									"nameLocation": "465:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "458:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 27,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "458:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 30,
												"name": "e",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 26,
												"src": "476:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											],
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "469:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes1_$",
												"typeString": "type(bytes1)"
											},
											"typeName": {
												"id": 28,
												"name": "bytes1",
												"nodeType": "ElementaryTypeName",
												"src": "469:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "469:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "g",
									"nameLocation": "572:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "565:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes2",
										"typeString": "bytes2"
									},
									"typeName": {
										"id": 33,
										"name": "bytes2",
										"nodeType": "ElementaryTypeName",
										"src": "565:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"value": {
										"hexValue": "307831323334",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "576:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4660_by_1",
											"typeString": "int_const 4660"
										},
										"value": "0x1234"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "h",
									"nameLocation": "596:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "589:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 36,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "589:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 39,
												"name": "g",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 35,
												"src": "607:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											],
											"id": 38,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "600:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 37,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "600:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "600:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "i",
									"nameLocation": "732:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "726:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 42,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "726:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "736:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "l",
									"nameLocation": "762:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "755:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 45,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "755:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31323334",
										"id": 46,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "766:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1234_by_1",
											"typeString": "int_const 1234"
										},
										"value": "1234"
									},
									"visibility": "internal"
								}
							],
							"scope": 49,
							"src": "26:796:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:824:0"
				},
				"id": 0
			}
		}
	}
}