{
	"id": "9fd0661cbb27868fe95ed29c5401acdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"level0/solidity_contract/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20; \n//创建一个自定义 ERC777 代币，模拟一个功德箱合约，记录每位施主的捐赠。\n// import \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\";\n// import \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\";\n// import \"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\";\n// contract Merit is IERC777Recipient {\n//     mapping(address => uint) public givers;\n//     address _owner;\n//     IERC777 _token;\n//     IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n//     bytes32 constant private TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b;\n//     constructor(IERC777 token) public {\n//         _erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\n//         _owner = msg.sender;\n//         _token = token;\n//     }\n//     function tokensReceived(\n//         address operator,\n//         address from,\n//         address to,\n//         uint amount,\n//         bytes calldata userData,\n//         bytes calldata operatorData\n//     ) external {\n//         givers[from] += amount;\n//     }\n//     // 功德箱管理员提取代币\n//     function withdraw() external {\n//         require(msg.sender == _owner, \"no permission\");\n//         uint balance = _token.balanceOf(address(this));\n//         _token.send(_owner, balance, \"\");\n//     }\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"sources": {
			"level0/solidity_contract/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "level0/solidity_contract/IERC777Recipient.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						}
					],
					"src": "32:1532:0"
				},
				"id": 0
			}
		}
	}
}